Ngnix:-
  A. WHY
     To solve the problem CK10
	 
  B. Points
     
	1. HTTP Verbs details
        
        1. - GET Method
            
            1. A get request is always followed by the request uri.
            2. Conditional Requests
               
               The If-Modified-Since request HTTP header makes the request conditional: the server sends back the requested resource, 
			   with a 200 status, only if it has been last modified after the given date. If the resource has not been modified since
			   the response is a 304 without any body; the Last-Modified response header of a previous request contains the date of last 
			   modification. Unlike If-Unmodified-Since, If-Modified-Since can only be used with a GET or HEAD.			   
	 
	        3. Partial Requests

               1. Partial request is like if we are asking for big files then only some bytes of the requested files is being sent to the client.
         
			      Example:- Vedio streaming a particular vedio file.

               2. A Partial request will only be applicable for the HTTP/1.1, It will not be applicable after this version of HTTP.
               3. A Partial response 
			         status: 206 :- Partial Content.
               4. Server must accept the Accept-Ranges: bytes Header. 	
               5. curl --header "Range: bytes 10-20" url.
			   
	    2. - POST Method

        3. - HEAD Method

              The HTTP HEAD method requests the headers that would be returned if the HEAD request's URL was instead requested with the HTTP
			  GET method. For example, if a URL might produce a large download, a HEAD request could read its Content-Length header to check
			  the filesize without actually downloading the file.  		
   			   
		4. - TRACE Method
                
              The HTTP TRACE method is designed for diagnostic purposes. If enabled, the web server will respond to requests that use the TRACE 
			  method by echoing in its response the exact request that was received.

              This behavior is often harmless, but occasionally leads to the disclosure of sensitive information such as internal authentication
			  headers appended by reverse proxies. This functionality could historically be used to bypass the HttpOnly cookie flag on cookies,
			  but this is no longer possible in modern web browsers.

    2. HTTP Status Codes

        1. 100 - 199 :[INFORMATION STATUS CODES]
        2. 200 - 299 :[SUCCESS STATUS CODES]
        3. 300 - 399 :[REDIRECTION STATUS CODES]
        4. 400 - 499 :[CLIENT ERROR STATUS CODES]
        5. 500 - 599 :[SERVER ERROR STATUS CODES]	


  C. REVERSE PROXY

        1. It hides the existence of the origin backend servers.
        2. Can protect the server from the web-based attacks, DOS.
        3. Can provide great Caching functionality.
		4. Can optimize content by Compressing it.
		5. Can act as an SSL Terminating Proxy.
		6. Request Routing
		
		
  D. Proxy Pass DIRECTIVE(PPD)
       
        1. PPD forwards the request to the proxied servers along with the directive.	   

			location / {
			    proxy_pass <Ip_Address>;
			}
			  
		2. X-REAL-IP 

            1. Example :- 
         	    location / {
			       proxy_pass <Ip_Address>;
				   proxy_set_header X-REAL-IP $remote_addr;
			    }	
			
			2. "proxy_set_header X-REAL-IP $remote_addr;" Config adds the actual Ip, where the request was genrated, and that is forwarded to the to actual AppServer, With a 
			    REQUEST HEADER (X-REAL-IP).
				
			3. This is usefull when there is session management based on the client Ip Address.	